---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={`${entry.data.title} - Your Name`} description={entry.data.excerpt}>
  <article class="blog-post">
    <div class="container">
      <header class="post-header">
        <nav class="breadcrumb">
          <a href="/blog">‚Üê Back to Blog</a>
        </nav>
        <h1>{entry.data.title}</h1>
        <div class="post-meta">
          <time datetime={entry.data.date}>
            {new Date(entry.data.date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          <div class="post-tags">
            {entry.data.tags.map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        </div>
      </header>
      
      <div class="post-content">
        <Content />
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  .blog-post {
    padding: 2rem 0 4rem;
  }

  .post-header {
    margin-bottom: 3rem;
  }

  .breadcrumb {
    margin-bottom: 2rem;
  }

  .breadcrumb a {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .breadcrumb a:hover {
    color: #2563EB;
  }

  .post-header h1 {
    font-size: 3rem;
    margin-bottom: 1.5rem;
    color: var(--color-primary);
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 2rem;
    flex-wrap: wrap;
  }

  .post-meta time {
    color: var(--color-text-light);
    font-weight: 500;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: var(--color-bg-secondary);
    color: var(--color-text);
    padding: 0.375rem 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .post-content {
    max-width: 800px;
    margin: 0 auto;
  }

  /* Markdown Content Styles */
  .post-content :global(h1) {
    font-size: 2.5rem;
    margin: 2rem 0 1rem;
    color: var(--color-primary);
  }

  .post-content :global(h2) {
    font-size: 2rem;
    margin: 2rem 0 1rem;
    color: var(--color-primary);
  }

  .post-content :global(h3) {
    font-size: 1.5rem;
    margin: 1.5rem 0 1rem;
    color: var(--color-primary);
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
    line-height: 1.7;
    color: var(--color-text-light);
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
    line-height: 1.6;
    color: var(--color-text-light);
  }

  .post-content :global(blockquote) {
    border-left: 4px solid var(--color-accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--color-text-light);
  }

  .post-content :global(code) {
    background: var(--color-bg-secondary);
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-family: var(--font-mono);
    font-size: 0.875rem;
    color: var(--color-text);
  }

  .post-content :global(pre) {
    background: var(--color-primary);
    color: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 2rem 0;
  }

  .post-content :global(pre code) {
    background: transparent;
    padding: 0;
    color: inherit;
  }

  .post-content :global(a) {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 500;
  }

  .post-content :global(a:hover) {
    text-decoration: underline;
  }

  .post-content :global(strong) {
    font-weight: 600;
    color: var(--color-text);
  }

  .post-content :global(em) {
    font-style: italic;
  }

  .post-content :global(hr) {
    border: none;
    height: 1px;
    background: var(--color-border);
    margin: 3rem 0;
  }

  @media (max-width: 768px) {
    .post-header h1 {
      font-size: 2.5rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .post-content :global(h1) {
      font-size: 2rem;
    }

    .post-content :global(h2) {
      font-size: 1.75rem;
    }

    .post-content :global(h3) {
      font-size: 1.5rem;
    }

    .post-content :global(pre) {
      margin-left: -1rem;
      margin-right: -1rem;
      border-radius: 0;
    }
  }
</style>